import * as React from "react"
import type { HeadFC, PageProps } from "gatsby"
import { icalToJSON } from "../scripts.ts"

/* 
  Hus:

  A-huset
  B-huset
  C-huset
  Fysikhuset
  Key-huset


  Lokaltyp:

  

*/

// interface HTTPResponse extends JSON {
//   code: number,
//   statusText?: string,
//   headers?: string,
//   body?: ReadableStream,
// }

interface icalJSON {
  body: string,
}

const URL = "https://cloud.timeedit.net/liu/web/schema/ri679Q93Y09Z55Q5X0870609ydF69Z6t12193X6QE414D6B8n5CF00QZ012815t1Q3Z7FDD04ABE565FAF5B08.ics";

const IndexPage: React.FC<PageProps> = () => {

  const [responseData, setResponseData] = React.useState('')
  let calendarInfo: string;

  function iicalToJSON(ical: string): icalJSON {
    return {
      body: ical
    }
  }

  React.useEffect(() => {
    fetch(URL)
      .then((response) => {
        let charsReceived = 0;
        let result: string;
        const reader = response.body ? response.body.getReader() : undefined;
        reader?.read().then(function processResponseBody({done, value}) {
          if (done) {
            console.log("Stream complete");
            icalToJSON("this doesn't matter")
            // setResponseData(result);
            calendarInfo = result;
            console.log(iicalToJSON(result))
            return result;
          }
          charsReceived += value.length;
          result += new TextDecoder().decode(value);

          return reader.read().then(processResponseBody);
        })
      })
  }, [])

  return (
    <main>
      <p>This is the index page.</p>
      <div>
        {calendarInfo}
      </div>
    </main>
  )
}

export default IndexPage

export const Head: HeadFC = () => <title>Home Page</title>
